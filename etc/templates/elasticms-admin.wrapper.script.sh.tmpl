#!/bin/bash
# This script is autogenerated by the container startup script
set -o allexport
source /tmp/{{ env.Getenv "ELASTICMS_ADMIN_INSTANCE_NAME" }}
set +o allexport

if [ ${1:-list} = sql ] || [ ${1:-list} = dump ] ; then
  if [ ${DB_DRIVER:-mysql} = mysql ] ; then
    if [ ${1:-list} = sql ] ; then
      mysql --port=$DB_PORT --host=$DB_HOST --user=$DB_USER --password=$(urlencode.py $DB_PASSWORD) $DB_NAME
    else
      mysqldump --port=$DB_PORT --host=$DB_HOST --user=$DB_USER --password=$(urlencode.py $DB_PASSWORD) $DB_NAME
    fi;
  elif [ ${DB_DRIVER:-mysql} = pgsql ] ; then
    if [ ${1:-list} = sql ] ; then
      psql postgresql://${DB_USER}:$(urlencode.py $DB_PASSWORD)@${DB_HOST//,/:${DB_PORT},}:${DB_PORT}/${DB_NAME}?connect_timeout=${DB_CONNECTION_TIMEOUT:-30} ${@:2}
    else
      pg_dump postgresql://${DB_USER}:$(urlencode.py $DB_PASSWORD)@${DB_HOST//,/:${DB_PORT},}:${DB_PORT}/${DB_NAME}?connect_timeout=${DB_CONNECTION_TIMEOUT:-30} -w --clean -Fp -O --schema=${DB_SCHEMA:-public} | sed "/^\(DROP\|ALTER\|CREATE\) SCHEMA.*\$/d"
    fi;
  else
    echo Driver $DB_DRIVER not supported
  fi;
else
  export EMS_PROCESS_COMMAND={{ env.Getenv "ELASTICMS_ADMIN_INSTANCE_NAME" }}
  php -d memory_limit=${CLI_PHP_MEMORY_LIMIT:-512M} /opt/src/bin/console "$@"
fi;